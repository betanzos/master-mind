@startuml
namespace mastermind {
    abstract class Mastermind {
        +play()
    }
    Mastermind *--> views.MainView

    class ConsoleMastermind extends Mastermind {
        +{static} main(args: String[])
    }

    class GraphicMastermind extends Mastermind {
        +{static} main(args: String[])
    }
}

namespace models {
    class Game {
        +hasWon(): boolean
        +isEnded(): boolean
        +totalAttempts(): int
        +getSecretCombinationAsString(): String
        +getAttemptAsString(int): String
        +recordAttempt(Combination)
    }
    Game *--> SecretCombination
    Game *--> "0..10" Attempt
    Game ..> Combination : use

    class Combination {
        +addColor(Color)
        +isComplete(): boolean
        +toString(): String
    }
    Combination o--> "4" types.Color

    class SecretCombination {
        +match(Combination): MatchResult
        +toString(): String
    }
    SecretCombination ..> Combination : use
    SecretCombination ..> MatchResult : return
    SecretCombination ..> types.Color : use
    SecretCombination -up-|> Combination

    class Attempt {
        +validateMatches(SecretCombination)
        +hasFourBlack(): boolean
        +toString():String
    }
    Attempt *--> Combination
    Attempt o--> MatchResult
    Attempt ..> SecretCombination : use

    class MatchResult {
        +blacks: int
        +whites: int
        +hasFourBlack(): boolean
        +toString(): String
    }
}

namespace types {
    enum Color {
        +RED
        +BLUE
        +YELLOW
        +GREEN
        +ORANGE
        +PURPLE

        +{static}parseSymbol(char): Color
        +{static}getAllowedSymbolsString(): String
        +getSymbol(): char
    }
}



package views {
    abstract class MainView {
        +start()
        +resume(): boolean
        +sayGoodBye()
    }
    MainView *--> GameView
    MainView *--> ResumeView
    MainView *--> GoodbyeView

    interface GameView {
        +show()
    }

    interface ResumeView {
        interact(): boolean
    }

    interface GoodbyeView

    package console as v.c {
        class ConsoleMainView extends views.MainView {
            +show()
            +isResumed(): boolean
        }
        ConsoleMainView --> ConsoleGameView
        ConsoleMainView --> models.Game
        ConsoleMainView <.. mastermind.ConsoleMastermind : instance
        ConsoleMainView -->  ConsoleResumeView
        ConsoleMainView --> ConsoleGoodbyeView

        class ConsoleGameView implements views.GameView
        ConsoleGameView *-right-> ConsoleProposedCombinationView
        ConsoleGameView *--> models.Game

        class ConsoleProposedCombinationView {
            +getProposedCombination(): Combination
        }
        ConsoleProposedCombinationView ..> models.Combination : use and return
        ConsoleProposedCombinationView ..> types.Color : use

        class ConsoleResumeView implements views.ResumeView
        class ConsoleGoodbyeView implements views.GoodbyeView
    }


    namespace graphic {
        class GraphicMainView extends views.MainView
        GraphicMainView <.up. mastermind.GraphicMastermind : instance
        GraphicMainView --> GraphicGameView
        GraphicMainView --> GraphicGoodbyeView
        GraphicMainView --> GraphicResumeView

        class GraphicGameView implements views.GameView
        class GraphicGoodbyeView implements views.GoodbyeView
        class GraphicResumeView implements views.ResumeView
    }
}
v.c .up.> utils.Console : use

class utils.Console {
    +readString(String): String
    +writeln(String)
}
@enduml